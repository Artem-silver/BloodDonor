//
//  EventPlanningViewController.m
//  BloodDonor
//
//  Created by Andrey Rebrik on 23.07.12.
//  Copyright (c) 2012 __MyCompanyName__. All rights reserved.
//

#import "EventPlanningViewController.h"
#import <Parse/Parse.h>

@interface EventPlanningViewController ()

@end

@implementation EventPlanningViewController

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self)
    {
        isTest = YES;
        
        typeDonateArray = [[NSArray arrayWithObjects:@"Цельная кровь",
                            @"Тромбоциты",
                            @"Плазма",
                            @"Гранулоциты",
                            nil] retain];
        
        daysArray = [[NSMutableArray array] retain];
        NSCalendar *currentCalendar = [NSCalendar currentCalendar];
        unsigned unitFlags = NSYearCalendarUnit | NSMonthCalendarUnit | NSDayCalendarUnit;
        NSDateComponents *dateComponents = [currentCalendar components:unitFlags fromDate:[NSDate date]];
        
        for (int i = 0; i < 365; i++)
        {
            dateComponents.day++;
            NSDate *currentDate = [currentCalendar dateFromComponents:dateComponents];
            dateComponents = [currentCalendar components:unitFlags fromDate:currentDate];
            
            NSString *dayString;
            NSString *monthString;
            
            if (dateComponents.day < 10)
                dayString = [NSString stringWithFormat:@"0%d", dateComponents.day];
            else
                dayString = [NSString stringWithFormat:@"%d", dateComponents.day];
            
            if (dateComponents.month < 10)
                monthString = [NSString stringWithFormat:@"0%d", dateComponents.month];
            else
                monthString = [NSString stringWithFormat:@"%d", dateComponents.month];
            
            [daysArray addObject:[NSString stringWithFormat:@"%@.%@", dayString, monthString]];
        }
        
        hoursArray = [[NSArray arrayWithObjects:@"00", @"01", @"02", @"03", @"04", @"05",
                      @"06", @"07", @"08", @"09", @"10", @"11",
                      @"12", @"13", @"14", @"15", @"16", @"17",
                      @"18", @"19", @"20", @"21", @"22", @"23",
                      nil] retain];
        minutesArray = [[NSArray arrayWithObjects:@"00", @"05", @"10", @"15", @"20", @"25",
                      @"30", @"35", @"40", @"45", @"50", @"55",
                      nil] retain];
        
        typeDonate = 0;
        bloodDonateDay = 0;
        bloodDonateHour = 0;
        bloodDonateMinute = 0;
        testDay = 0;
        testHour = 0;
        testMinute = 0;
    }
    return self;
}

#pragma mark Buttons click
- (IBAction)cancelClick:(id)sender
{
    [self.navigationController popViewControllerAnimated:NO];
}

- (IBAction)doneClick:(id)sender
{
    NSCalendar *currentCalendar = [NSCalendar currentCalendar];
    unsigned unitFlags = NSYearCalendarUnit | NSMonthCalendarUnit | NSDayCalendarUnit;
    NSDateComponents *dateComponents = [currentCalendar components:unitFlags fromDate:[NSDate date]];
    
    if (isTest)
    {
        dateComponents.day += testDay;
        dateComponents.hour = testHour;
        dateComponents.minute = testMinute * 5;
    }
    else
    {
        dateComponents.day += bloodDonateDay;
        dateComponents.hour = bloodDonateHour;
        dateComponents.minute = bloodDonateMinute * 5;
    }
    
    NSDate *selectedDate = [currentCalendar dateFromComponents:dateComponents];
    
    PFUser *currentUser = [PFUser currentUser];
    PFRelation *eventsRelation = [currentUser relationforKey:@"events"];
    
    PFObject *event = [PFObject objectWithClassName:@"Events"];
    if (isTest)
    {
        [event setObject:testCommentTextField.text forKey:@"comment"];
        [event setObject:[NSNumber numberWithInt:0] forKey:@"type"];
    }
    else
    {
        [event setObject:bloodDonateCommentTextField.text forKey:@"comment"];
        [event setObject:[NSNumber numberWithInt:1] forKey:@"type"];
        [event setObject:[NSNumber numberWithInt:typeDonate] forKey:@"delivery"];
    }
    
    [event setObject:selectedDate forKey:@"date"];
    [event setObject:[NSNumber numberWithBool:!knowReminderButton.selected] forKey:@"analysisResult"];
    [event setObject:[NSNumber numberWithBool:NO] forKey:@"finished"];
    [event setObject:[NSNumber numberWithInt:2] forKey:@"notice"];
    [event save];
    
    [eventsRelation addObject:event];
    [currentUser save];
    
    [self.navigationController popViewControllerAnimated:NO];
}

- (IBAction)eventClick:(id)sender
{
    if (isTest)
    {
        isTest = NO;
        [testView removeFromSuperview];
        scrollView.contentSize = bloodDonationView.frame.size;
        [scrollView addSubview:bloodDonationView];
    }
    else
    {
        isTest = YES;
        [bloodDonationView removeFromSuperview];
        scrollView.contentSize = testView.frame.size;
        [scrollView addSubview:testView];
    }
}

- (IBAction)typeDonateClick:(id)sender
{
    [typeDonatePickerView selectRow:typeDonate inComponent:0 animated:NO];
    
    CGRect typeDonateInputViewRect = typeDonateInputView.frame;
    typeDonateInputViewRect.origin.y = 267.0f;
    typeDonateInputView.frame = typeDonateInputViewRect;
    [self.view addSubview:typeDonateInputView];
    
    [UIView beginAnimations:nil context:nil];
    [UIView setAnimationDuration:0.3f];
    [UIView setAnimationBeginsFromCurrentState:YES];
    
    typeDonateInputViewRect.origin.y = 0.0f;
    typeDonateInputView.frame = typeDonateInputViewRect;
    
    [UIView commitAnimations];
}

- (IBAction)dateClick:(id)sender
{
    if (isTest)
    {
        [datePickerView selectRow:testDay inComponent:0 animated:NO];
        [datePickerView selectRow:testHour inComponent:1 animated:NO];
        [datePickerView selectRow:testMinute inComponent:2 animated:NO];
    }
    else
    {
        [datePickerView selectRow:bloodDonateDay inComponent:0 animated:NO];
        [datePickerView selectRow:bloodDonateHour inComponent:1 animated:NO];
        [datePickerView selectRow:bloodDonateMinute inComponent:2 animated:NO];
    }
    
    CGRect dateInputViewRect = dateInputView.frame;
    dateInputViewRect.origin.y = 267.0f;
    dateInputView.frame = dateInputViewRect;
    [self.view addSubview:dateInputView];
    
    [UIView beginAnimations:nil context:nil];
    [UIView setAnimationDuration:0.3f];
    [UIView setAnimationBeginsFromCurrentState:YES];
    
    dateInputViewRect.origin.y = 0.0f;
    dateInputView.frame = dateInputViewRect;
    
    [UIView commitAnimations];
}

- (IBAction)locationClick:(id)sender
{
    
}

- (IBAction)donateReminderClick:(id)sender
{
    
}

- (IBAction)knowReminderClick:(id)sender
{
    if (knowReminderButton.selected)
        knowReminderButton.selected = NO;
    else
        knowReminderButton.selected = YES;
}

- (IBAction)removeClick:(id)sender
{
    
}

- (IBAction)typeDonateCancelClick:(id)sender
{
    [UIView beginAnimations:nil context:nil];
    [UIView setAnimationDuration:0.3f];
    [UIView setAnimationBeginsFromCurrentState:YES];
    [UIView setAnimationDelegate:self];
    [UIView setAnimationDidStopSelector:@selector(typeDonateInputViewHide)];
    
    CGRect typeDonateInputViewRect = typeDonateInputView.frame;
    typeDonateInputViewRect.origin.y = 267.0f;
    typeDonateInputView.frame = typeDonateInputViewRect;
    
    [UIView commitAnimations];
}

- (IBAction)typeDonateDoneClick:(id)sender
{
    typeDonate = [typeDonatePickerView selectedRowInComponent:0];
    [typeDonateButton setTitle:[typeDonateArray objectAtIndex:typeDonate] forState:UIControlStateNormal];
    [typeDonateButton setTitle:[typeDonateArray objectAtIndex:typeDonate] forState:UIControlStateHighlighted];
    
    [UIView beginAnimations:nil context:nil];
    [UIView setAnimationDuration:0.3f];
    [UIView setAnimationBeginsFromCurrentState:YES];
    [UIView setAnimationDelegate:self];
    [UIView setAnimationDidStopSelector:@selector(typeDonateInputViewHide)];
    
    CGRect typeDonateInputViewRect = typeDonateInputView.frame;
    typeDonateInputViewRect.origin.y = 267.0f;
    typeDonateInputView.frame = typeDonateInputViewRect;
    
    [UIView commitAnimations];
}

- (IBAction)dateCancelClick:(id)sender
{
    [UIView beginAnimations:nil context:nil];
    [UIView setAnimationDuration:0.3f];
    [UIView setAnimationBeginsFromCurrentState:YES];
    [UIView setAnimationDelegate:self];
    [UIView setAnimationDidStopSelector:@selector(dateInputViewHide)];
    
    CGRect dateInputViewRect = dateInputView.frame;
    dateInputViewRect.origin.y = 267.0f;
    dateInputView.frame = dateInputViewRect;
    
    [UIView commitAnimations];
}

- (IBAction)dateDoneClick:(id)sender
{
    if (isTest)
    {
        testDay = [datePickerView selectedRowInComponent:0];
        testHour = [datePickerView selectedRowInComponent:1];
        testMinute = [datePickerView selectedRowInComponent:2];
        
        [testDateButton setTitle:[NSString stringWithFormat:@"%@ %@:%@",
                                  [daysArray objectAtIndex:testDay],
                                  [hoursArray objectAtIndex:testHour],
                                  [minutesArray objectAtIndex:testMinute]]
                        forState:UIControlStateNormal];
        [testDateButton setTitle:[NSString stringWithFormat:@"%@ %@:%@",
                                  [daysArray objectAtIndex:testDay],
                                  [hoursArray objectAtIndex:testHour],
                                  [minutesArray objectAtIndex:testMinute]]
                        forState:UIControlStateHighlighted];
    }
    else
    {
        bloodDonateDay = [datePickerView selectedRowInComponent:0];
        bloodDonateHour = [datePickerView selectedRowInComponent:1];
        bloodDonateMinute = [datePickerView selectedRowInComponent:2];
        
        [bloodDonationDateButton setTitle:[NSString stringWithFormat:@"%@ %@:%@",
                                           [daysArray objectAtIndex:bloodDonateDay],
                                           [hoursArray objectAtIndex:bloodDonateHour],
                                           [minutesArray objectAtIndex:bloodDonateMinute]]
                                 forState:UIControlStateNormal];
        [bloodDonationDateButton setTitle:[NSString stringWithFormat:@"%@ %@:%@",
                                           [daysArray objectAtIndex:bloodDonateDay],
                                           [hoursArray objectAtIndex:bloodDonateHour],
                                           [minutesArray objectAtIndex:bloodDonateMinute]]
                                 forState:UIControlStateHighlighted];
    }
    
    [UIView beginAnimations:nil context:nil];
    [UIView setAnimationDuration:0.3f];
    [UIView setAnimationBeginsFromCurrentState:YES];
    [UIView setAnimationDelegate:self];
    [UIView setAnimationDidStopSelector:@selector(dateInputViewHide)];
    
    CGRect dateInputViewRect = dateInputView.frame;
    dateInputViewRect.origin.y = 267.0f;
    dateInputView.frame = dateInputViewRect;
    
    [UIView commitAnimations];
}

#pragma mark UITextFieldDelegate
- (BOOL)textFieldShouldReturn:(UITextField *)textField
{
    return [textField resignFirstResponder];
}

#pragma mark Animation Stopped
- (void)typeDonateInputViewHide
{
    [typeDonateInputView removeFromSuperview];
}

- (void)dateInputViewHide
{
    [dateInputView removeFromSuperview];
}

#pragma mark UIPickerView
- (NSInteger)numberOfComponentsInPickerView:(UIPickerView *)pickerView
{
    if ([pickerView isEqual:datePickerView])
        return 3;
    
    return 1;
}

- (NSInteger)pickerView:(UIPickerView *)pickerView numberOfRowsInComponent:(NSInteger)component
{
    if ([pickerView isEqual:typeDonatePickerView])
        return typeDonateArray.count;
    else if ([pickerView isEqual:datePickerView])
    {
        switch (component)
        {
            case 0:
                return daysArray.count;
                
            case 1:
                return hoursArray.count;
                
            case 2:
                return minutesArray.count;
                
            default:
                break;
        }
    }
    
    return 0;
}

- (CGFloat)pickerView:(UIPickerView *)pickerView widthForComponent:(NSInteger)component
{
    if ([pickerView isEqual:datePickerView])
    {
        switch (component)
        {
            case 0:
                return 100;
            
            default:
                return 82;
        }
    }
    
    return 320;
}

- (NSString *)pickerView:(UIPickerView *)pickerView titleForRow:(NSInteger)row forComponent:(NSInteger)component
{
    if ([pickerView isEqual:typeDonatePickerView])
        return [typeDonateArray objectAtIndex:row];
    else if ([pickerView isEqual:datePickerView])
    {
        switch (component)
        {
            case 0:
                return [daysArray objectAtIndex:row];
                
            case 1:
                return [hoursArray objectAtIndex:row];
                
            case 2:
                return [minutesArray objectAtIndex:row];
                
            default:
                break;
        }
    }
    
    return @"";
}

#pragma mark Lifecycle
- (void)viewDidLoad
{
    [super viewDidLoad];
    
    sTabBarController = [[STabBarController alloc] init];
    sTabBarController.viewController = self;
    [sTabBarController addSubview];
    
    scrollView.contentSize = testView.frame.size;
    [scrollView addSubview:testView];
    
    [typeDonateButton setTitle:[typeDonateArray objectAtIndex:typeDonate] forState:UIControlStateNormal];
    [typeDonateButton setTitle:[typeDonateArray objectAtIndex:typeDonate] forState:UIControlStateHighlighted];
    
    [bloodDonationDateButton setTitle:[NSString stringWithFormat:@"%@ %@:%@",
                                       [daysArray objectAtIndex:bloodDonateDay],
                                       [hoursArray objectAtIndex:bloodDonateHour],
                                       [minutesArray objectAtIndex:bloodDonateMinute]]
                             forState:UIControlStateNormal];
    [bloodDonationDateButton setTitle:[NSString stringWithFormat:@"%@ %@:%@",
                                       [daysArray objectAtIndex:bloodDonateDay],
                                       [hoursArray objectAtIndex:bloodDonateHour],
                                       [minutesArray objectAtIndex:bloodDonateMinute]]
                             forState:UIControlStateHighlighted];
    
    [testDateButton setTitle:[NSString stringWithFormat:@"%@ %@:%@",
                                       [daysArray objectAtIndex:testDay],
                                       [hoursArray objectAtIndex:testHour],
                                       [minutesArray objectAtIndex:testMinute]]
                             forState:UIControlStateNormal];
    [testDateButton setTitle:[NSString stringWithFormat:@"%@ %@:%@",
                                       [daysArray objectAtIndex:testDay],
                                       [hoursArray objectAtIndex:testHour],
                                       [minutesArray objectAtIndex:testMinute]]
                             forState:UIControlStateHighlighted];
}

- (void)viewDidAppear:(BOOL)animated
{
    [super viewDidAppear:animated];
    
    [sTabBarController addSubview];
}

- (void)viewDidDisappear:(BOOL)animated
{
    [sTabBarController removeSubviews];
    
    [super viewDidDisappear:animated];
}

- (void)dealloc
{
    [sTabBarController release];
    [typeDonateArray release];
    [daysArray release];
    [hoursArray release];
    [minutesArray release];
    [super dealloc];
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}

@end
